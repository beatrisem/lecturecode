package lv.beatrise.repeat;

import lv.beatrise.repeat.EncapsulationClass;
import lv.beatrise.repeat.MyClassConstructor;
import lv.beatrise.repeat.MyClass;
import lv.beatrise.repeat.MyClassMethods;



public class TestOOP {

	public static void main(String[] args) {
		MyClass newObj = new MyClass();
		MyClass newObj2 = new MyClass();
		String strObj = "hi";
		String strObj2 = "hi";
		newObj.x = 70;

		System.out.println(newObj.equals(newObj2));
		System.out.println(strObj.equals(strObj2));
		
		System.out.println(newObj.x);
		
		//MyClassMethods myObjMethod = new MyClassMethods();
		//myObjMethod.myMethod();
//		myObjMethod.myStringMethod();
//		System.out.println(myObjMethod.myStringMethod());
		
		
		//MyClassMethods myObjMethod = new MyClassMethods();
//		double numberDouble = myObjMethod.returnDouble();
//		numberDouble = myObjMethod.returnDouble();
//		System.out.println(numberDouble);
		
		
		MyClassConstructor myConstructorObj = new MyClassConstructor(1999L, "BMW");
		MyClassConstructor myConstructorObj2 = new MyClassConstructor(1989L, "Jaguar");
		MyClassConstructor myConstructorObj3 = new MyClassConstructor(1969L, "Mini");
		
	System.out.println(myConstructorObj.getModelName().equals( myConstructorObj3.getModelName()));
	
	
	
		EncapsulationClass objEncaps = new EncapsulationClass();
		System.out.println(objEncaps.getUser());
		objEncaps.setUser("bea");
		
		ImplementInterface objInterface = new ImplementInterface();
		objInterface.sendEmail();
		System.out.println(objInterface.sendEmailCount());
		
		
		MyEnums status = MyEnums.HIGH;
		System.out.println("this status is: "+status);
		System.out.println(MyEnums.LOW);
	
		
		switch(status){
		
		case LOW:
			System.out.println("low danger");
			break;
		case MEDIUM:
			System.out.println("medium danger");
			break;
		case HIGH:
			System.out.println("HIGH danger");
			break;
		default:
			System.out.println("Not available stat");
		}
	
		
		String numberStr = "240";
		int numberInt = Integer.parseInt(numberStr);
		int result = 30 + numberInt;
		System.out.println(result);
		
		String numberStrValue = "50";
		Integer calueInt = Integer.valueOf(numberStrValue);
		
		System.out.println(valueInt);
	
	
	
	
	
	
		
	}

}
